<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.bitcamp.TFmapper.TFmapper">
     <parameterMap type="java.util.HashMap" id="hashmap"></parameterMap>
     <select id = "SearchCount" resultType="int" parameterMap="hashmap">
        select count(distinct StoreName)
        from StoreInfo
         <where>
            <if test = "search=='' and searchtxt!=''">
              and StoreName like CONCAT('%',#{searchtxt},'%') or StoreAddr like CONCAT ('%', #{searchtxt}, '%') or
              StoreCategori like CONCAT('%', #{searchtxt}, '%')
           </if>
           <if test= "search =='StoreAddr' and searchtxt !=''" >
              and StoreAddr like CONCAT('%',#{searchtxt},'%')
           </if>
            <if test= "search =='StoreFood' and searchtxt !=''" >
              and StoreFood like CONCAT('%',#{searchtxt},'%')
           </if>
        </where>

     </select>
     
      <select id = "StoreSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        
        select StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp
        from StoreInfo
        <where>
           <if test = "search=='' and searchtxt!=''">
              and StoreName like CONCAT('%',#{searchtxt},'%') or StoreAddr like CONCAT('%',#{searchtxt},'%') or
              StoreAddr2 like CONCAT('%',#{searchtxt},'%') or StoreCategori like CONCAT('%',#{searchtxt},'%')
           </if>
           <if test= "search =='StoreAddr' and searchtxt !=''" >
              and StoreAddr like CONCAT('%',#{searchtxt},'%')
           </if>
            <if test= "search =='StoreFood' and searchtxt !=''" >
              and StoreFood like CONCAT('%',#{searchtxt},'%')
           </if>
        </where>
           group by StoreName
           <![CDATA[order by StoreNo limit 10 offset #{endRow}]]>
        
     </select>
   <select id = "MemberCount" resultType="int" parameterMap="hashmap">
        select count(*)
        from StoreInfo2
        <where>
           and StoreGrade = 'member'
        </where>
     </select>
     
     <select id = "MemberSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        
        select StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp
        from StoreInfo2
      where StoreGrade = 'member'

        <![CDATA[order by StoreNo limit 10 offset #{endRow}]]>
        
     </select>
     
     <insert id = "MamberInsertResult" parameterType="com.bitcamp.TFDTO.StoreListDTO">
        insert into StoreInfo2(StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
         FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp)
      values(#{StoreName}, "member", #{StoreAddr}, #{StoreCategori}, #{StoreFood}, #{FoodWeather},
       #{StoreCost}, #{StoreCall}, date_format(now(), '%Y-%m-%d'), #{StoreParking},
       #{StoreHours}, #{StoreBTime}, #{StoreClose}, 0, 0);
     </insert>

	
  	<select id = "MemberDetail" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
  		select StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
  		FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
  		StoreClose, StoreHit, StoreUp
		where StoreNo=#{no}
  	</select>
  	
  	<update id = "MemberUpdateResult" parameterType="com.bitcamp.TFDTO.StoreListDTO">
  		update StoreInfo2
		set StoreName=#{StoreName}, StoreAddr1=#{StoreAddr1}, StoreAddr2=#{StoreAddr2},
		StoreCategori=#{StoreCategori}, StoreFood=#{StoreFood}, StoreCall=#{StoreCall},
		StoreDate=date_format(now(), '%Y-%m-%d'), StoreContent=#{StoreContent}
		where StoreNo=#{StoreNo};
  	</update>
  	
  	<delete id="MemberDelete" parameterType="int">
  		delete from StoreInfo2
		where StoreNo=#{no};
  	</delete>
  	
  	<select id = "RandomReco" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
  		select StoreNo, StoreName, StoreAddr1, StoreAddr2, StoreCategori, StoreFood, StoreCall, StoreDate, FoodWeather, StoreContent, StoreHit, StoreUp
		from StoreInfo
		group by StoreCategori
		order by rand()
		limit 0, 1
  	</select>
  	
  	<select id = "ReplyList" resultType = "com.bitcamp.TFDTO.ReviewListDTO" parameterMap="hashmap">
  		select StoreReviewNo, StoreReviewDate, StoreReviewContent, StoreCount, StoreNo
		from ReviewList2
		Where StoreNo=#{no};
  	</select>
  	
  	<insert id = "ReplyInsert" parameterType="com.bitcamp.TFDTO.ReviewListDTO">
  		insert into ReviewList2(StoreReviewDate, StoreReviewContent, StoreCount, StoreNo)
		values(date_format(now(), '%Y-%m-%d'), #{StoreReviewContent}, #{StoreCount}, #{StoreNo});
  	</insert>
  	
  	<delete id="ReplyDelete" parameterType="int">
  		delete from ReviewList2
		where StoreReviewNo=#{no}
  	</delete>
  	
  	<insert id = "StoreView" parameterType="com.bitcamp.TFDTO.ViewListDTO">
  		insert into StoreView(StoreNo)
		values(#{no})
  	</insert>
  	<select id = "StoreViewList" resultType = "com.bitcamp.TFDTO.ViewListDTO" parameterMap="hashmap">
  		select v.StoreNo as StoreNo, StoreName, StoreAddr1, StoreAddr2
		from StoreInfo2 s inner join StoreView v on s.StoreNo = v.StoreNo
  	</select>
  	
  	<insert id="register">
  		insert into tf_user(
  		user_name
  		,user_id
  		,user_pw
  		,user_email
  		,user_nickname
  		) values (
  			#{userId}
  			,#{userPw}
  			,#{userName}
  			,#{userEmail}
  		)
  	</insert>
  	
   
     <select id = "MemberDetail" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        select StoreNo, StoreName, StoreGrade, (select avg(StoreCount) from ReviewList2 Where StoreNo=#{no})as StoreScore, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp
        from StoreInfo2
     	where StoreNo=#{no}
     </select>
     
     <update id = "MemberUpdateResult" parameterType="com.bitcamp.TFDTO.StoreListDTO">
      update StoreInfo2
      set StoreName=#{StoreName}, StoreAddr=#{StoreAddr}, StoreCategori=#{StoreCategori}, 
      StoreFood=#{StoreFood}, StoreCall=#{StoreCall}, StoreFood=#{StoreFood}, FoodWeather=#{FoodWeather},
      StoreCost=#{StoreCost}, StoreParking=#{StoreParking}, StoreHours=#{StoreHours}, StoreBTime=#{StoreBTime},
      StoreClose=#{StoreClose}, StoreDate=date_format(now(), '%Y-%m-%d')
      where StoreNo=#{StoreNo};
     </update>
     
     <delete id="MemberDelete" parameterType="int">
        delete from StoreInfo2
      where StoreNo=#{no};
     </delete>
     
     <select id = "RandomReco" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      select StoreNo, StoreName, StoreAddr, StoreCategori, StoreFood, StoreCall, StoreDate, FoodWeather, StoreHit, StoreUp
      from StoreInfo
      group by StoreCategori
      order by rand()
      limit 0, 1
     </select>
     
     <select id = "ReplyList" resultType = "com.bitcamp.TFDTO.ReviewListDTO" parameterMap="hashmap">
        select StoreReviewNo, StoreReviewDate, StoreReviewContent, StoreCount, StoreNo
      from ReviewList2
      Where StoreNo=#{no};
     </select>
     
     <insert id = "ReplyInsert" parameterType="com.bitcamp.TFDTO.ReviewListDTO">
        insert into ReviewList2(StoreReviewDate, StoreReviewContent, StoreCount, StoreNo)
      values(date_format(now(), '%Y-%m-%d'), #{StoreReviewContent}, #{StoreCount}, #{StoreNo});
     </insert>
     
     <delete id="ReplyDelete" parameterType="int">
        delete from ReviewList2
      where StoreReviewNo=#{no}
     </delete>
     
     <insert id = "StoreView" parameterType="com.bitcamp.TFDTO.ViewListDTO">
        insert into StoreView(StoreNo)
      values(#{no})
     </insert>
     <select id = "StoreViewList" resultType = "com.bitcamp.TFDTO.ViewListDTO" parameterMap="hashmap">
      select v.StoreNo as StoreNo, StoreName, StoreAddr
      from StoreInfo2 s inner join StoreView v on s.StoreNo = v.StoreNo
      group by StoreName
     </select>

  </mapper>