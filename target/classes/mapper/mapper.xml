<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.bitcamp.TFmapper.TFmapper">
     <parameterMap type="java.util.HashMap" id="hashmap"></parameterMap>
     
     <select id = "MainBestSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      	select StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp
        from StoreInfo
        group by StoreName
      	order by StoreUp desc, StoreNo limit 4 offset 0
      	
     </select>
     <select id = "MemberBestSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      	select  StoreNo, StoreName, s.StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp, StoreImg, (select count(*) from ReviewList2 r where r.storeNo = s.storeNo)as ReplyCount,
        round((select avg(StoreCount) from ReviewList2 r where r.storeNo = s.storeNo), 1)as StoreScore
        from StoreInfo2 s
        where StoreGrade = 'member'
        group by StoreName
      	order by StoreUp desc, StoreNo limit 3 offset 0
      	
     </select>
     
     <select id = "WeatherBestSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      	select  StoreNo, StoreName, s.StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp, StoreImg, (select count(*) from ReviewList2 r where r.storeNo = s.storeNo)as ReplyCount,
        round((select avg(StoreCount) from ReviewList2 r where r.storeNo = s.storeNo), 1)as StoreScore
        from StoreInfo2 s
        where FoodWeather = #{weather}
        group by StoreName
      	order by StoreUp desc, StoreNo limit 2 offset 0
      	
     </select>
     
     <select id = "SearchCount" resultType="int" parameterMap="hashmap">
        select count(distinct StoreName)
        from StoreInfo
         <where>
            <if test = "search=='' and searchtxt!=''">
              and StoreName like CONCAT('%',#{searchtxt},'%') or StoreAddr like CONCAT ('%', #{searchtxt}, '%') or
              StoreCategori like CONCAT('%', #{searchtxt}, '%')
           </if>
           <if test= "search =='StoreAddr' and searchtxt !=''" >
              and StoreAddr like CONCAT('%',#{searchtxt},'%')
           </if>
            <if test= "search =='StoreFood' and searchtxt !=''" >
              and StoreFood like CONCAT('%',#{searchtxt},'%')
           </if>
        </where>

     </select>

     
     
      <select id = "StoreSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        
        select StoreNo, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp
        from StoreInfo
        <where>
           <if test = "search=='' and searchtxt!=''">
              and StoreName like CONCAT('%',#{searchtxt},'%') or StoreAddr like CONCAT('%',#{searchtxt},'%') or
              StoreCategori like CONCAT('%',#{searchtxt},'%')
           </if>
           <if test= "search =='StoreAddr' and searchtxt !=''" >
              and StoreAddr like CONCAT('%',#{searchtxt},'%')
           </if>
            <if test= "search =='StoreFood' and searchtxt !=''" >
              and StoreFood like CONCAT('%',#{searchtxt},'%')
           </if>
        </where>
           group by StoreName
           <![CDATA[order by StoreNo limit 6 offset #{endRow}]]>
        
     </select>
   <select id = "MemberCount" resultType="int" parameterMap="hashmap">
        select count(*)
        from StoreInfo2
        <where>
           and StoreGrade = 'member'
        </where>
     </select>
     
     <select id = "MemberSearch" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        
        select  StoreNo, StoreName, s.StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp, StoreImg, (select count(*) from ReviewList2 r where r.storeNo = s.storeNo)as ReplyCount,
        round((select avg(StoreCount) from ReviewList2 r where r.storeNo = s.storeNo), 1)as StoreScore
        from StoreInfo2 s
        where StoreGrade = 'member'

        order by StoreNo desc, StoreNo limit 6 offset #{endRow}
        
     </select>
     
     <select id = "MemberBest" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      	select  StoreNo, StoreName, s.StoreGrade, StoreAddr, StoreCategori, StoreFood,
        FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp, StoreImg, (select count(*) from ReviewList2 r where r.storeNo = s.storeNo)as ReplyCount,
        round((select avg(StoreCount) from ReviewList2 r where r.storeNo = s.storeNo), 1)as StoreScore
        from StoreInfo2 s
        where StoreGrade = 'member'
        group by StoreName
      	order by StoreScore desc, StoreNo limit 3 offset 0
      	
     </select>
     
     <insert id = "MamberInsertResult" parameterType="com.bitcamp.TFDTO.StoreListDTO">
        insert into StoreInfo2(UserNickName, StoreName, StoreGrade, StoreAddr, StoreCategori, StoreFood,
         FoodWeather, StoreCost, StoreCall, StoreDate, StoreParking, StoreHours, StoreBTime,
        StoreClose, StoreHit, StoreUp)
      values(#{UserNickName}, #{StoreName}, "member", #{StoreAddr}, #{StoreCategori}, #{StoreFood}, #{FoodWeather},
       #{StoreCost}, #{StoreCall}, date_format(now(), '%Y-%m-%d'), #{StoreParking}, #{StoreHours}, #{StoreBTime}, #{StoreClose}, 0, 0);

     </insert>
  	
   
     <select id = "MemberDetail" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
        select 
        	StoreNo
        	, UserNickName
        	, StoreName
        	, StoreGrade
        	, round((select avg(StoreCount) from ReviewList2 Where StoreNo=#{no}), 1)as StoreScore
        	, StoreAddr
        	, StoreCategori
        	, StoreFood
        	, FoodWeather
        	, StoreCost
        	, StoreCall
        	, StoreDate
        	, StoreParking
        	, StoreHours
        	, StoreBTime,
        	StoreClose, StoreHit, StoreUp, StoreImg
			        
        from StoreInfo2
     	where StoreNo=#{no}
	
     </select>
     
     <update id = "MemberUpdateResult" parameterType="com.bitcamp.TFDTO.StoreListDTO">
      update StoreInfo2
      set StoreName=#{StoreName}, StoreAddr=#{StoreAddr}, StoreCategori=#{StoreCategori}, 
      StoreFood=#{StoreFood}, StoreCall=#{StoreCall}, StoreFood=#{StoreFood}, FoodWeather=#{FoodWeather},
      StoreCost=#{StoreCost}, StoreParking=#{StoreParking}, StoreHours=#{StoreHours}, StoreBTime=#{StoreBTime},
      StoreClose=#{StoreClose}, StoreDate=date_format(now(), '%Y-%m-%d')
      where StoreNo=#{StoreNo};
     </update>
     
     <delete id="MemberDelete" parameterType="int">
        delete from StoreInfo2
      where StoreNo=#{no};
     </delete>
     
     <select id = "RandomReco" resultType = "com.bitcamp.TFDTO.StoreListDTO" parameterMap="hashmap">
      select StoreNo, StoreName, StoreAddr, StoreCategori, StoreFood, StoreCall, StoreDate, FoodWeather, StoreHit, StoreUp
      from StoreInfo
      group by StoreCategori
      order by rand()
      limit 0, 1
     </select>
     
     <select id = "ReplyList" resultType = "com.bitcamp.TFDTO.ReviewListDTO" parameterMap="hashmap">
        select StoreReviewNo, UserNickName, StoreReviewDate, StoreReviewContent, StoreCount, StoreNo
      from ReviewList2
      Where StoreNo=#{no};
     </select>
     
     <insert id = "ReplyInsert" parameterType="com.bitcamp.TFDTO.ReviewListDTO">
        insert into ReviewList2(UserNickName, StoreReviewDate, StoreReviewContent, StoreCount, StoreNo)
        values(#{UserNickName}, date_format(now(), '%Y-%m-%d'), #{StoreReviewContent}, #{StoreCount}, #{StoreNo});
     </insert>
     
     <delete id="ReplyDelete" parameterType="int">
        delete from ReviewList2
      where StoreReviewNo=#{no}
     </delete>
     
     <insert id = "StoreView" parameterType="com.bitcamp.TFDTO.ViewListDTO">
        insert into StoreView(StoreNo)
      values(#{no})
     </insert>
     <select id = "StoreViewList" resultType = "com.bitcamp.TFDTO.ViewListDTO" parameterMap="hashmap">
      select v.StoreNo as StoreNo, StoreName, StoreAddr
      from StoreInfo2 s inner join StoreView v on s.StoreNo = v.StoreNo
      group by StoreName
     </select>
     
     <select id = "ReplyCount" resultType="int" parameterMap="hashmap">
        select count(*)
		from ReviewList2
		where StoreNo=#{no};
     </select>
     
     <update id = "StoreHit" parameterType="com.bitcamp.TFDTO.StoreListDTO">
     	update StoreInfo2
		set
		StoreHit=StoreHit+1
		where StoreNo=#{no};
     </update>
     
       
     <select id = "ReplyDetail" resultType = "com.bitcamp.TFDTO.ReviewListDTO" parameterMap="hashmap">
        select StoreReviewNo, UserNickName, StoreReviewDate,
        StoreReviewContent, StoreCount, StoreNo
        from ReviewList2
     	where StoreReviewNo=#{no}
     </select>

     <update id = "ReplyUpdateResult" parameterType="com.bitcamp.TFDTO.ReviewListDTO">
      update ReviewList2
      set
      StoreReviewContent=#{StoreReviewContent},
      StoreCount=#{StoreCount}, StoreReviewDate=date_format(now(), '%Y-%m-%d')
      where StoreReviewNo=#{StoreReviewNo};

     </update>
     
         
     <select id = "login" resultType ="com.bitcamp.TFDTO.UserDTO">
  	 	select  
			userNo,		userName, 	userId,  userPw,  userEmail, userNickname
		from tf_user
		where userId='${userId}'
		and userPw='${userPw}'
  	 </select>
  	 
  	 <insert id="userjoin" parameterType="com.bitcamp.TFDTO.UserDTO">
  	 	insert into tf_user
		(userNo,userName,userId,userPw,userEmail,userNickname)
		values (${userNo},'${userName}','${userId}','${userPw}','${userEmail}','${userNickname}')
  	 </insert>
  	 
  	 <select id="idCheck" resultType="int"  parameterMap="hashmap">
	
		SELECT count(*) 
		FROM tf_user
		WHERE userId = #{userId}
	
	</select>
     
     <insert id = "StoreUp" parameterType="com.bitcamp.TFDTO.LikeToDTO">
     	insert into liketo(StoreNo, UserId) values(#{storeno}, #{userid});
     </insert>
	
	<update id = "StoreUpCount" parameterType="com.bitcamp.TFDTO.StoreListDTO">
     	update StoreInfo2
		set
		StoreUp=StoreUp+1
		where StoreNo=#{storeno};
     </update>
     
     
     <delete id="Storedown" parameterType="String">
        delete from liketo
      	where UserId=#{userid};
     </delete>
     
     <update id = "StoredownCount" parameterType="com.bitcamp.TFDTO.StoreListDTO">
     	update StoreInfo2
		set
		StoreUp=StoreUp-1
		where StoreNo=#{storeno};
     </update>
     
     <select id = "StoretotalupCount" resultType="int" parameterMap="hashmap">
        select StoreUp
        from StoreInfo2
        where StoreNo=#{storeno};
     </select>
     
     
     <select id = "StoreUpAction" resultType="int" parameterMap="hashmap">
        select count(1)
     	from liketo
     	where userid = #{userid} and storeno = #{storeno}
     </select>
     

  </mapper>